name: Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Notify Telegram on start pipeline
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

      - name: Notify Telegram (Tests Started)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "üß™ Tests are starting... Hold tight! üöÄ"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: npm ci

      - name: Linting
        run: npm run lint

      - name: Set up Database and Prisma
        run: |
          echo "${{ secrets.ENV }}" > .env
          npx prisma migrate deploy

      - name: Unit testing
        run: npm run test

      - name: E2E testing
        run: npm run test:e2e

      - name: Notify Telegram (Tests Completed)
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚úÖ Tests passed successfully! üéâ"

      - name: Notify Telegram (Tests Failed)
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚ùå Tests failed! Check logs for details. üõë"

  docker-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Notify Telegram (Docker Push Started)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "üê≥ Docker image push has started! üöÄ Building and pushing the image to Docker Hub... üî®"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login in Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push the docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ–≥ ${{ github.sha }}
          tags: ${{ secrets.DOCKER_USERNAME }}/muscle-feed

      - name: Notify Telegram (Docker Image Pushed)
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚úÖ Docker image has been successfully pushed to Docker Hub! üì¶"

      - name: Notify Telegram (Docker Push Failed)
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚ùå Docker image push failed! Check logs. üî•"

  deploy:
    needs: docker-push
    runs-on: ubuntu-latest

    steps:
      - name: Notify Telegram (Deployment Started)
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "üöÄ Deployment started... Pulling new Docker images! üõ†Ô∏è"

      - name: Development deploy
        if: github.ref == 'refs/heads/dev'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEVELOPMENT_HOST }}
          username: ${{ secrets.DEVELOPMENT_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/muscle-backend
            docker compose pull
            docker compose up -d

      - name: Production deploy
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /var/www/muscle-feed/backend/
            docker compose pull
            docker compose up -d

      - name: Notify Telegram (Deployment Successful)
        if: success()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚úÖ Deployment completed successfully! üéâ The server is live. üî•"

      - name: Notify Telegram (Deployment Failed)
        if: failure()
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "‚ùå Deployment failed! Check the server logs. üîç"
